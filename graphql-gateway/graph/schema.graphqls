# User Service Schema
type User {
    id: ID!
    name: String!
    email: String!
    password: String!
}

type Query {
    users: [User!]!
    user(name: String!): User
}

type Mutation {
    registerUser(input: RegisterInput!): User!
}

input RegisterInput {
    name: String!
    email: String!
    password: String!
}

# Product Service Schema
type Product {
    id: ID!
    name: String!
    description: String
    price: Float!
    quantity: Int!
}

extend type Query {
    products: [Product!]!
    product(id: ID!): Product
}

extend type Mutation {
    createProduct(input: ProductInput!): Product!
    updateProduct(id: ID!, input: ProductInput!): Product!
    deleteProduct(id: ID!): Boolean!
}

input ProductInput {
    name: String!
    description: String
    price: Float!
    quantity: Int!
}

# Order Service Schema
type Order {
    id: ID!
    name: String!
    quantity: Int!
    status: String!
}

extend type Query {
    orders: [Order!]!
    order(id: ID!): Order
}

extend type Mutation {
    placeOrder(input: OrderInput!): Order!
    updateOrderStatus(id: ID!, status: String!): Order!
}

input OrderInput {
    name: String!
    quantity: Int!
    status: String!
}